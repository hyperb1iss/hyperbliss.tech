---
description: Guidelines for creating and maintaining project files in the hyperbliss.tech portfolio
globs: src/projects/**/*.md
alwaysApply: false
---
# 🚀 Project Structure Guidelines

## 📂 Organization

Projects on hyperbliss.tech are stored as Markdown files in the `src/projects/` directory. Each project has its own file with frontmatter metadata and content description.

## 📝 File Structure

Projects follow this naming convention:
- Lowercase with hyphens (e.g., `project-name.md`)
- Should match the intended URL slug

## 🔍 Frontmatter Schema

Each project file requires these frontmatter fields:

```md
---
title: "Project Title"
description: "Short description displayed in cards and previews"
date: "YYYY-MM-DD"
technologies: ["Tech1", "Tech2", "Tech3"]
featured: true|false
cover: "/images/projects/project-name-cover.jpg"
repository: "https://github.com/username/repo" (optional)
live: "https://example.com" (optional)
---
```

### Required Fields:
- `title`: Display name of the project
- `description`: Brief summary (1-2 sentences)
- `date`: Completion or last major update date
- `technologies`: Array of technologies/tools used
- `featured`: Boolean for highlighting on homepage
- `cover`: Path to cover image (stored in `public/images/projects/`)

### Optional Fields:
- `repository`: URL to source code repository
- `live`: URL to live/demo version
- `video`: URL to demo video
- `awards`: Array of awards or recognition

## 📸 Images

- Cover images should be 1200×675px (16:9 ratio)
- Additional images referenced in content should be placed in `public/images/projects/[project-name]/`
- Use WebP format when possible for better performance
- All images must have alt text for accessibility

## 📊 Content Structure

Project content should follow this structure:

1. **Introduction**: Brief overview of the project
2. **Problem Statement**: What issue or need the project addresses
3. **Solution**: How the project solves the problem
4. **Technical Details**: Key architectural decisions and technologies
5. **Challenges**: Interesting problems solved during development
6. **Outcome**: Results, metrics, or benefits of the project

## 🔮 Display Components

Projects are displayed using these components:
- `ProjectList.tsx`: Grid layout of project cards on the projects page
- `ProjectCard.tsx`: Individual project preview card
- `ProjectDetail.tsx`: Full project view with all content and images
